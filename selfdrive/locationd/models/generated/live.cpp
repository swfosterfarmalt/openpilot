#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2381728513021776623) {
   out_2381728513021776623[0] = 0;
   out_2381728513021776623[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2381728513021776623[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2381728513021776623[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2381728513021776623[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2381728513021776623[5] = -sin(in_vec[1]);
   out_2381728513021776623[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2381728513021776623[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2381728513021776623[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2381728513021776623[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2381728513021776623[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2381728513021776623[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2381728513021776623[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2381728513021776623[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2381728513021776623[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2381728513021776623[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2381728513021776623[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2381728513021776623[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5908421990898430924) {
   out_5908421990898430924[0] = delta_x[0] + nom_x[0];
   out_5908421990898430924[1] = delta_x[1] + nom_x[1];
   out_5908421990898430924[2] = delta_x[2] + nom_x[2];
   out_5908421990898430924[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5908421990898430924[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5908421990898430924[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5908421990898430924[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5908421990898430924[7] = delta_x[6] + nom_x[7];
   out_5908421990898430924[8] = delta_x[7] + nom_x[8];
   out_5908421990898430924[9] = delta_x[8] + nom_x[9];
   out_5908421990898430924[10] = delta_x[9] + nom_x[10];
   out_5908421990898430924[11] = delta_x[10] + nom_x[11];
   out_5908421990898430924[12] = delta_x[11] + nom_x[12];
   out_5908421990898430924[13] = delta_x[12] + nom_x[13];
   out_5908421990898430924[14] = delta_x[13] + nom_x[14];
   out_5908421990898430924[15] = delta_x[14] + nom_x[15];
   out_5908421990898430924[16] = delta_x[15] + nom_x[16];
   out_5908421990898430924[17] = delta_x[16] + nom_x[17];
   out_5908421990898430924[18] = delta_x[17] + nom_x[18];
   out_5908421990898430924[19] = delta_x[18] + nom_x[19];
   out_5908421990898430924[20] = delta_x[19] + nom_x[20];
   out_5908421990898430924[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5372329235597557523) {
   out_5372329235597557523[0] = -nom_x[0] + true_x[0];
   out_5372329235597557523[1] = -nom_x[1] + true_x[1];
   out_5372329235597557523[2] = -nom_x[2] + true_x[2];
   out_5372329235597557523[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5372329235597557523[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5372329235597557523[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5372329235597557523[6] = -nom_x[7] + true_x[7];
   out_5372329235597557523[7] = -nom_x[8] + true_x[8];
   out_5372329235597557523[8] = -nom_x[9] + true_x[9];
   out_5372329235597557523[9] = -nom_x[10] + true_x[10];
   out_5372329235597557523[10] = -nom_x[11] + true_x[11];
   out_5372329235597557523[11] = -nom_x[12] + true_x[12];
   out_5372329235597557523[12] = -nom_x[13] + true_x[13];
   out_5372329235597557523[13] = -nom_x[14] + true_x[14];
   out_5372329235597557523[14] = -nom_x[15] + true_x[15];
   out_5372329235597557523[15] = -nom_x[16] + true_x[16];
   out_5372329235597557523[16] = -nom_x[17] + true_x[17];
   out_5372329235597557523[17] = -nom_x[18] + true_x[18];
   out_5372329235597557523[18] = -nom_x[19] + true_x[19];
   out_5372329235597557523[19] = -nom_x[20] + true_x[20];
   out_5372329235597557523[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1274189134229994757) {
   out_1274189134229994757[0] = 1.0;
   out_1274189134229994757[1] = 0;
   out_1274189134229994757[2] = 0;
   out_1274189134229994757[3] = 0;
   out_1274189134229994757[4] = 0;
   out_1274189134229994757[5] = 0;
   out_1274189134229994757[6] = 0;
   out_1274189134229994757[7] = 0;
   out_1274189134229994757[8] = 0;
   out_1274189134229994757[9] = 0;
   out_1274189134229994757[10] = 0;
   out_1274189134229994757[11] = 0;
   out_1274189134229994757[12] = 0;
   out_1274189134229994757[13] = 0;
   out_1274189134229994757[14] = 0;
   out_1274189134229994757[15] = 0;
   out_1274189134229994757[16] = 0;
   out_1274189134229994757[17] = 0;
   out_1274189134229994757[18] = 0;
   out_1274189134229994757[19] = 0;
   out_1274189134229994757[20] = 0;
   out_1274189134229994757[21] = 0;
   out_1274189134229994757[22] = 1.0;
   out_1274189134229994757[23] = 0;
   out_1274189134229994757[24] = 0;
   out_1274189134229994757[25] = 0;
   out_1274189134229994757[26] = 0;
   out_1274189134229994757[27] = 0;
   out_1274189134229994757[28] = 0;
   out_1274189134229994757[29] = 0;
   out_1274189134229994757[30] = 0;
   out_1274189134229994757[31] = 0;
   out_1274189134229994757[32] = 0;
   out_1274189134229994757[33] = 0;
   out_1274189134229994757[34] = 0;
   out_1274189134229994757[35] = 0;
   out_1274189134229994757[36] = 0;
   out_1274189134229994757[37] = 0;
   out_1274189134229994757[38] = 0;
   out_1274189134229994757[39] = 0;
   out_1274189134229994757[40] = 0;
   out_1274189134229994757[41] = 0;
   out_1274189134229994757[42] = 0;
   out_1274189134229994757[43] = 0;
   out_1274189134229994757[44] = 1.0;
   out_1274189134229994757[45] = 0;
   out_1274189134229994757[46] = 0;
   out_1274189134229994757[47] = 0;
   out_1274189134229994757[48] = 0;
   out_1274189134229994757[49] = 0;
   out_1274189134229994757[50] = 0;
   out_1274189134229994757[51] = 0;
   out_1274189134229994757[52] = 0;
   out_1274189134229994757[53] = 0;
   out_1274189134229994757[54] = 0;
   out_1274189134229994757[55] = 0;
   out_1274189134229994757[56] = 0;
   out_1274189134229994757[57] = 0;
   out_1274189134229994757[58] = 0;
   out_1274189134229994757[59] = 0;
   out_1274189134229994757[60] = 0;
   out_1274189134229994757[61] = 0;
   out_1274189134229994757[62] = 0;
   out_1274189134229994757[63] = 0;
   out_1274189134229994757[64] = 0;
   out_1274189134229994757[65] = 0;
   out_1274189134229994757[66] = -0.5*state[4];
   out_1274189134229994757[67] = -0.5*state[5];
   out_1274189134229994757[68] = -0.5*state[6];
   out_1274189134229994757[69] = 0;
   out_1274189134229994757[70] = 0;
   out_1274189134229994757[71] = 0;
   out_1274189134229994757[72] = 0;
   out_1274189134229994757[73] = 0;
   out_1274189134229994757[74] = 0;
   out_1274189134229994757[75] = 0;
   out_1274189134229994757[76] = 0;
   out_1274189134229994757[77] = 0;
   out_1274189134229994757[78] = 0;
   out_1274189134229994757[79] = 0;
   out_1274189134229994757[80] = 0;
   out_1274189134229994757[81] = 0;
   out_1274189134229994757[82] = 0;
   out_1274189134229994757[83] = 0;
   out_1274189134229994757[84] = 0;
   out_1274189134229994757[85] = 0;
   out_1274189134229994757[86] = 0;
   out_1274189134229994757[87] = 0.5*state[3];
   out_1274189134229994757[88] = 0.5*state[6];
   out_1274189134229994757[89] = -0.5*state[5];
   out_1274189134229994757[90] = 0;
   out_1274189134229994757[91] = 0;
   out_1274189134229994757[92] = 0;
   out_1274189134229994757[93] = 0;
   out_1274189134229994757[94] = 0;
   out_1274189134229994757[95] = 0;
   out_1274189134229994757[96] = 0;
   out_1274189134229994757[97] = 0;
   out_1274189134229994757[98] = 0;
   out_1274189134229994757[99] = 0;
   out_1274189134229994757[100] = 0;
   out_1274189134229994757[101] = 0;
   out_1274189134229994757[102] = 0;
   out_1274189134229994757[103] = 0;
   out_1274189134229994757[104] = 0;
   out_1274189134229994757[105] = 0;
   out_1274189134229994757[106] = 0;
   out_1274189134229994757[107] = 0;
   out_1274189134229994757[108] = -0.5*state[6];
   out_1274189134229994757[109] = 0.5*state[3];
   out_1274189134229994757[110] = 0.5*state[4];
   out_1274189134229994757[111] = 0;
   out_1274189134229994757[112] = 0;
   out_1274189134229994757[113] = 0;
   out_1274189134229994757[114] = 0;
   out_1274189134229994757[115] = 0;
   out_1274189134229994757[116] = 0;
   out_1274189134229994757[117] = 0;
   out_1274189134229994757[118] = 0;
   out_1274189134229994757[119] = 0;
   out_1274189134229994757[120] = 0;
   out_1274189134229994757[121] = 0;
   out_1274189134229994757[122] = 0;
   out_1274189134229994757[123] = 0;
   out_1274189134229994757[124] = 0;
   out_1274189134229994757[125] = 0;
   out_1274189134229994757[126] = 0;
   out_1274189134229994757[127] = 0;
   out_1274189134229994757[128] = 0;
   out_1274189134229994757[129] = 0.5*state[5];
   out_1274189134229994757[130] = -0.5*state[4];
   out_1274189134229994757[131] = 0.5*state[3];
   out_1274189134229994757[132] = 0;
   out_1274189134229994757[133] = 0;
   out_1274189134229994757[134] = 0;
   out_1274189134229994757[135] = 0;
   out_1274189134229994757[136] = 0;
   out_1274189134229994757[137] = 0;
   out_1274189134229994757[138] = 0;
   out_1274189134229994757[139] = 0;
   out_1274189134229994757[140] = 0;
   out_1274189134229994757[141] = 0;
   out_1274189134229994757[142] = 0;
   out_1274189134229994757[143] = 0;
   out_1274189134229994757[144] = 0;
   out_1274189134229994757[145] = 0;
   out_1274189134229994757[146] = 0;
   out_1274189134229994757[147] = 0;
   out_1274189134229994757[148] = 0;
   out_1274189134229994757[149] = 0;
   out_1274189134229994757[150] = 0;
   out_1274189134229994757[151] = 0;
   out_1274189134229994757[152] = 0;
   out_1274189134229994757[153] = 1.0;
   out_1274189134229994757[154] = 0;
   out_1274189134229994757[155] = 0;
   out_1274189134229994757[156] = 0;
   out_1274189134229994757[157] = 0;
   out_1274189134229994757[158] = 0;
   out_1274189134229994757[159] = 0;
   out_1274189134229994757[160] = 0;
   out_1274189134229994757[161] = 0;
   out_1274189134229994757[162] = 0;
   out_1274189134229994757[163] = 0;
   out_1274189134229994757[164] = 0;
   out_1274189134229994757[165] = 0;
   out_1274189134229994757[166] = 0;
   out_1274189134229994757[167] = 0;
   out_1274189134229994757[168] = 0;
   out_1274189134229994757[169] = 0;
   out_1274189134229994757[170] = 0;
   out_1274189134229994757[171] = 0;
   out_1274189134229994757[172] = 0;
   out_1274189134229994757[173] = 0;
   out_1274189134229994757[174] = 0;
   out_1274189134229994757[175] = 1.0;
   out_1274189134229994757[176] = 0;
   out_1274189134229994757[177] = 0;
   out_1274189134229994757[178] = 0;
   out_1274189134229994757[179] = 0;
   out_1274189134229994757[180] = 0;
   out_1274189134229994757[181] = 0;
   out_1274189134229994757[182] = 0;
   out_1274189134229994757[183] = 0;
   out_1274189134229994757[184] = 0;
   out_1274189134229994757[185] = 0;
   out_1274189134229994757[186] = 0;
   out_1274189134229994757[187] = 0;
   out_1274189134229994757[188] = 0;
   out_1274189134229994757[189] = 0;
   out_1274189134229994757[190] = 0;
   out_1274189134229994757[191] = 0;
   out_1274189134229994757[192] = 0;
   out_1274189134229994757[193] = 0;
   out_1274189134229994757[194] = 0;
   out_1274189134229994757[195] = 0;
   out_1274189134229994757[196] = 0;
   out_1274189134229994757[197] = 1.0;
   out_1274189134229994757[198] = 0;
   out_1274189134229994757[199] = 0;
   out_1274189134229994757[200] = 0;
   out_1274189134229994757[201] = 0;
   out_1274189134229994757[202] = 0;
   out_1274189134229994757[203] = 0;
   out_1274189134229994757[204] = 0;
   out_1274189134229994757[205] = 0;
   out_1274189134229994757[206] = 0;
   out_1274189134229994757[207] = 0;
   out_1274189134229994757[208] = 0;
   out_1274189134229994757[209] = 0;
   out_1274189134229994757[210] = 0;
   out_1274189134229994757[211] = 0;
   out_1274189134229994757[212] = 0;
   out_1274189134229994757[213] = 0;
   out_1274189134229994757[214] = 0;
   out_1274189134229994757[215] = 0;
   out_1274189134229994757[216] = 0;
   out_1274189134229994757[217] = 0;
   out_1274189134229994757[218] = 0;
   out_1274189134229994757[219] = 1.0;
   out_1274189134229994757[220] = 0;
   out_1274189134229994757[221] = 0;
   out_1274189134229994757[222] = 0;
   out_1274189134229994757[223] = 0;
   out_1274189134229994757[224] = 0;
   out_1274189134229994757[225] = 0;
   out_1274189134229994757[226] = 0;
   out_1274189134229994757[227] = 0;
   out_1274189134229994757[228] = 0;
   out_1274189134229994757[229] = 0;
   out_1274189134229994757[230] = 0;
   out_1274189134229994757[231] = 0;
   out_1274189134229994757[232] = 0;
   out_1274189134229994757[233] = 0;
   out_1274189134229994757[234] = 0;
   out_1274189134229994757[235] = 0;
   out_1274189134229994757[236] = 0;
   out_1274189134229994757[237] = 0;
   out_1274189134229994757[238] = 0;
   out_1274189134229994757[239] = 0;
   out_1274189134229994757[240] = 0;
   out_1274189134229994757[241] = 1.0;
   out_1274189134229994757[242] = 0;
   out_1274189134229994757[243] = 0;
   out_1274189134229994757[244] = 0;
   out_1274189134229994757[245] = 0;
   out_1274189134229994757[246] = 0;
   out_1274189134229994757[247] = 0;
   out_1274189134229994757[248] = 0;
   out_1274189134229994757[249] = 0;
   out_1274189134229994757[250] = 0;
   out_1274189134229994757[251] = 0;
   out_1274189134229994757[252] = 0;
   out_1274189134229994757[253] = 0;
   out_1274189134229994757[254] = 0;
   out_1274189134229994757[255] = 0;
   out_1274189134229994757[256] = 0;
   out_1274189134229994757[257] = 0;
   out_1274189134229994757[258] = 0;
   out_1274189134229994757[259] = 0;
   out_1274189134229994757[260] = 0;
   out_1274189134229994757[261] = 0;
   out_1274189134229994757[262] = 0;
   out_1274189134229994757[263] = 1.0;
   out_1274189134229994757[264] = 0;
   out_1274189134229994757[265] = 0;
   out_1274189134229994757[266] = 0;
   out_1274189134229994757[267] = 0;
   out_1274189134229994757[268] = 0;
   out_1274189134229994757[269] = 0;
   out_1274189134229994757[270] = 0;
   out_1274189134229994757[271] = 0;
   out_1274189134229994757[272] = 0;
   out_1274189134229994757[273] = 0;
   out_1274189134229994757[274] = 0;
   out_1274189134229994757[275] = 0;
   out_1274189134229994757[276] = 0;
   out_1274189134229994757[277] = 0;
   out_1274189134229994757[278] = 0;
   out_1274189134229994757[279] = 0;
   out_1274189134229994757[280] = 0;
   out_1274189134229994757[281] = 0;
   out_1274189134229994757[282] = 0;
   out_1274189134229994757[283] = 0;
   out_1274189134229994757[284] = 0;
   out_1274189134229994757[285] = 1.0;
   out_1274189134229994757[286] = 0;
   out_1274189134229994757[287] = 0;
   out_1274189134229994757[288] = 0;
   out_1274189134229994757[289] = 0;
   out_1274189134229994757[290] = 0;
   out_1274189134229994757[291] = 0;
   out_1274189134229994757[292] = 0;
   out_1274189134229994757[293] = 0;
   out_1274189134229994757[294] = 0;
   out_1274189134229994757[295] = 0;
   out_1274189134229994757[296] = 0;
   out_1274189134229994757[297] = 0;
   out_1274189134229994757[298] = 0;
   out_1274189134229994757[299] = 0;
   out_1274189134229994757[300] = 0;
   out_1274189134229994757[301] = 0;
   out_1274189134229994757[302] = 0;
   out_1274189134229994757[303] = 0;
   out_1274189134229994757[304] = 0;
   out_1274189134229994757[305] = 0;
   out_1274189134229994757[306] = 0;
   out_1274189134229994757[307] = 1.0;
   out_1274189134229994757[308] = 0;
   out_1274189134229994757[309] = 0;
   out_1274189134229994757[310] = 0;
   out_1274189134229994757[311] = 0;
   out_1274189134229994757[312] = 0;
   out_1274189134229994757[313] = 0;
   out_1274189134229994757[314] = 0;
   out_1274189134229994757[315] = 0;
   out_1274189134229994757[316] = 0;
   out_1274189134229994757[317] = 0;
   out_1274189134229994757[318] = 0;
   out_1274189134229994757[319] = 0;
   out_1274189134229994757[320] = 0;
   out_1274189134229994757[321] = 0;
   out_1274189134229994757[322] = 0;
   out_1274189134229994757[323] = 0;
   out_1274189134229994757[324] = 0;
   out_1274189134229994757[325] = 0;
   out_1274189134229994757[326] = 0;
   out_1274189134229994757[327] = 0;
   out_1274189134229994757[328] = 0;
   out_1274189134229994757[329] = 1.0;
   out_1274189134229994757[330] = 0;
   out_1274189134229994757[331] = 0;
   out_1274189134229994757[332] = 0;
   out_1274189134229994757[333] = 0;
   out_1274189134229994757[334] = 0;
   out_1274189134229994757[335] = 0;
   out_1274189134229994757[336] = 0;
   out_1274189134229994757[337] = 0;
   out_1274189134229994757[338] = 0;
   out_1274189134229994757[339] = 0;
   out_1274189134229994757[340] = 0;
   out_1274189134229994757[341] = 0;
   out_1274189134229994757[342] = 0;
   out_1274189134229994757[343] = 0;
   out_1274189134229994757[344] = 0;
   out_1274189134229994757[345] = 0;
   out_1274189134229994757[346] = 0;
   out_1274189134229994757[347] = 0;
   out_1274189134229994757[348] = 0;
   out_1274189134229994757[349] = 0;
   out_1274189134229994757[350] = 0;
   out_1274189134229994757[351] = 1.0;
   out_1274189134229994757[352] = 0;
   out_1274189134229994757[353] = 0;
   out_1274189134229994757[354] = 0;
   out_1274189134229994757[355] = 0;
   out_1274189134229994757[356] = 0;
   out_1274189134229994757[357] = 0;
   out_1274189134229994757[358] = 0;
   out_1274189134229994757[359] = 0;
   out_1274189134229994757[360] = 0;
   out_1274189134229994757[361] = 0;
   out_1274189134229994757[362] = 0;
   out_1274189134229994757[363] = 0;
   out_1274189134229994757[364] = 0;
   out_1274189134229994757[365] = 0;
   out_1274189134229994757[366] = 0;
   out_1274189134229994757[367] = 0;
   out_1274189134229994757[368] = 0;
   out_1274189134229994757[369] = 0;
   out_1274189134229994757[370] = 0;
   out_1274189134229994757[371] = 0;
   out_1274189134229994757[372] = 0;
   out_1274189134229994757[373] = 1.0;
   out_1274189134229994757[374] = 0;
   out_1274189134229994757[375] = 0;
   out_1274189134229994757[376] = 0;
   out_1274189134229994757[377] = 0;
   out_1274189134229994757[378] = 0;
   out_1274189134229994757[379] = 0;
   out_1274189134229994757[380] = 0;
   out_1274189134229994757[381] = 0;
   out_1274189134229994757[382] = 0;
   out_1274189134229994757[383] = 0;
   out_1274189134229994757[384] = 0;
   out_1274189134229994757[385] = 0;
   out_1274189134229994757[386] = 0;
   out_1274189134229994757[387] = 0;
   out_1274189134229994757[388] = 0;
   out_1274189134229994757[389] = 0;
   out_1274189134229994757[390] = 0;
   out_1274189134229994757[391] = 0;
   out_1274189134229994757[392] = 0;
   out_1274189134229994757[393] = 0;
   out_1274189134229994757[394] = 0;
   out_1274189134229994757[395] = 1.0;
   out_1274189134229994757[396] = 0;
   out_1274189134229994757[397] = 0;
   out_1274189134229994757[398] = 0;
   out_1274189134229994757[399] = 0;
   out_1274189134229994757[400] = 0;
   out_1274189134229994757[401] = 0;
   out_1274189134229994757[402] = 0;
   out_1274189134229994757[403] = 0;
   out_1274189134229994757[404] = 0;
   out_1274189134229994757[405] = 0;
   out_1274189134229994757[406] = 0;
   out_1274189134229994757[407] = 0;
   out_1274189134229994757[408] = 0;
   out_1274189134229994757[409] = 0;
   out_1274189134229994757[410] = 0;
   out_1274189134229994757[411] = 0;
   out_1274189134229994757[412] = 0;
   out_1274189134229994757[413] = 0;
   out_1274189134229994757[414] = 0;
   out_1274189134229994757[415] = 0;
   out_1274189134229994757[416] = 0;
   out_1274189134229994757[417] = 1.0;
   out_1274189134229994757[418] = 0;
   out_1274189134229994757[419] = 0;
   out_1274189134229994757[420] = 0;
   out_1274189134229994757[421] = 0;
   out_1274189134229994757[422] = 0;
   out_1274189134229994757[423] = 0;
   out_1274189134229994757[424] = 0;
   out_1274189134229994757[425] = 0;
   out_1274189134229994757[426] = 0;
   out_1274189134229994757[427] = 0;
   out_1274189134229994757[428] = 0;
   out_1274189134229994757[429] = 0;
   out_1274189134229994757[430] = 0;
   out_1274189134229994757[431] = 0;
   out_1274189134229994757[432] = 0;
   out_1274189134229994757[433] = 0;
   out_1274189134229994757[434] = 0;
   out_1274189134229994757[435] = 0;
   out_1274189134229994757[436] = 0;
   out_1274189134229994757[437] = 0;
   out_1274189134229994757[438] = 0;
   out_1274189134229994757[439] = 1.0;
   out_1274189134229994757[440] = 0;
   out_1274189134229994757[441] = 0;
   out_1274189134229994757[442] = 0;
   out_1274189134229994757[443] = 0;
   out_1274189134229994757[444] = 0;
   out_1274189134229994757[445] = 0;
   out_1274189134229994757[446] = 0;
   out_1274189134229994757[447] = 0;
   out_1274189134229994757[448] = 0;
   out_1274189134229994757[449] = 0;
   out_1274189134229994757[450] = 0;
   out_1274189134229994757[451] = 0;
   out_1274189134229994757[452] = 0;
   out_1274189134229994757[453] = 0;
   out_1274189134229994757[454] = 0;
   out_1274189134229994757[455] = 0;
   out_1274189134229994757[456] = 0;
   out_1274189134229994757[457] = 0;
   out_1274189134229994757[458] = 0;
   out_1274189134229994757[459] = 0;
   out_1274189134229994757[460] = 0;
   out_1274189134229994757[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5206476803248674863) {
   out_5206476803248674863[0] = dt*state[7] + state[0];
   out_5206476803248674863[1] = dt*state[8] + state[1];
   out_5206476803248674863[2] = dt*state[9] + state[2];
   out_5206476803248674863[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5206476803248674863[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5206476803248674863[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5206476803248674863[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5206476803248674863[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5206476803248674863[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5206476803248674863[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5206476803248674863[10] = state[10];
   out_5206476803248674863[11] = state[11];
   out_5206476803248674863[12] = state[12];
   out_5206476803248674863[13] = state[13];
   out_5206476803248674863[14] = state[14];
   out_5206476803248674863[15] = state[15];
   out_5206476803248674863[16] = state[16];
   out_5206476803248674863[17] = state[17];
   out_5206476803248674863[18] = state[18];
   out_5206476803248674863[19] = state[19];
   out_5206476803248674863[20] = state[20];
   out_5206476803248674863[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7634219856181846541) {
   out_7634219856181846541[0] = 1;
   out_7634219856181846541[1] = 0;
   out_7634219856181846541[2] = 0;
   out_7634219856181846541[3] = 0;
   out_7634219856181846541[4] = 0;
   out_7634219856181846541[5] = 0;
   out_7634219856181846541[6] = dt;
   out_7634219856181846541[7] = 0;
   out_7634219856181846541[8] = 0;
   out_7634219856181846541[9] = 0;
   out_7634219856181846541[10] = 0;
   out_7634219856181846541[11] = 0;
   out_7634219856181846541[12] = 0;
   out_7634219856181846541[13] = 0;
   out_7634219856181846541[14] = 0;
   out_7634219856181846541[15] = 0;
   out_7634219856181846541[16] = 0;
   out_7634219856181846541[17] = 0;
   out_7634219856181846541[18] = 0;
   out_7634219856181846541[19] = 0;
   out_7634219856181846541[20] = 0;
   out_7634219856181846541[21] = 0;
   out_7634219856181846541[22] = 1;
   out_7634219856181846541[23] = 0;
   out_7634219856181846541[24] = 0;
   out_7634219856181846541[25] = 0;
   out_7634219856181846541[26] = 0;
   out_7634219856181846541[27] = 0;
   out_7634219856181846541[28] = dt;
   out_7634219856181846541[29] = 0;
   out_7634219856181846541[30] = 0;
   out_7634219856181846541[31] = 0;
   out_7634219856181846541[32] = 0;
   out_7634219856181846541[33] = 0;
   out_7634219856181846541[34] = 0;
   out_7634219856181846541[35] = 0;
   out_7634219856181846541[36] = 0;
   out_7634219856181846541[37] = 0;
   out_7634219856181846541[38] = 0;
   out_7634219856181846541[39] = 0;
   out_7634219856181846541[40] = 0;
   out_7634219856181846541[41] = 0;
   out_7634219856181846541[42] = 0;
   out_7634219856181846541[43] = 0;
   out_7634219856181846541[44] = 1;
   out_7634219856181846541[45] = 0;
   out_7634219856181846541[46] = 0;
   out_7634219856181846541[47] = 0;
   out_7634219856181846541[48] = 0;
   out_7634219856181846541[49] = 0;
   out_7634219856181846541[50] = dt;
   out_7634219856181846541[51] = 0;
   out_7634219856181846541[52] = 0;
   out_7634219856181846541[53] = 0;
   out_7634219856181846541[54] = 0;
   out_7634219856181846541[55] = 0;
   out_7634219856181846541[56] = 0;
   out_7634219856181846541[57] = 0;
   out_7634219856181846541[58] = 0;
   out_7634219856181846541[59] = 0;
   out_7634219856181846541[60] = 0;
   out_7634219856181846541[61] = 0;
   out_7634219856181846541[62] = 0;
   out_7634219856181846541[63] = 0;
   out_7634219856181846541[64] = 0;
   out_7634219856181846541[65] = 0;
   out_7634219856181846541[66] = 1;
   out_7634219856181846541[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7634219856181846541[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7634219856181846541[69] = 0;
   out_7634219856181846541[70] = 0;
   out_7634219856181846541[71] = 0;
   out_7634219856181846541[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7634219856181846541[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7634219856181846541[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7634219856181846541[75] = 0;
   out_7634219856181846541[76] = 0;
   out_7634219856181846541[77] = 0;
   out_7634219856181846541[78] = 0;
   out_7634219856181846541[79] = 0;
   out_7634219856181846541[80] = 0;
   out_7634219856181846541[81] = 0;
   out_7634219856181846541[82] = 0;
   out_7634219856181846541[83] = 0;
   out_7634219856181846541[84] = 0;
   out_7634219856181846541[85] = 0;
   out_7634219856181846541[86] = 0;
   out_7634219856181846541[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7634219856181846541[88] = 1;
   out_7634219856181846541[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7634219856181846541[90] = 0;
   out_7634219856181846541[91] = 0;
   out_7634219856181846541[92] = 0;
   out_7634219856181846541[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7634219856181846541[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7634219856181846541[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7634219856181846541[96] = 0;
   out_7634219856181846541[97] = 0;
   out_7634219856181846541[98] = 0;
   out_7634219856181846541[99] = 0;
   out_7634219856181846541[100] = 0;
   out_7634219856181846541[101] = 0;
   out_7634219856181846541[102] = 0;
   out_7634219856181846541[103] = 0;
   out_7634219856181846541[104] = 0;
   out_7634219856181846541[105] = 0;
   out_7634219856181846541[106] = 0;
   out_7634219856181846541[107] = 0;
   out_7634219856181846541[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7634219856181846541[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7634219856181846541[110] = 1;
   out_7634219856181846541[111] = 0;
   out_7634219856181846541[112] = 0;
   out_7634219856181846541[113] = 0;
   out_7634219856181846541[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7634219856181846541[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7634219856181846541[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7634219856181846541[117] = 0;
   out_7634219856181846541[118] = 0;
   out_7634219856181846541[119] = 0;
   out_7634219856181846541[120] = 0;
   out_7634219856181846541[121] = 0;
   out_7634219856181846541[122] = 0;
   out_7634219856181846541[123] = 0;
   out_7634219856181846541[124] = 0;
   out_7634219856181846541[125] = 0;
   out_7634219856181846541[126] = 0;
   out_7634219856181846541[127] = 0;
   out_7634219856181846541[128] = 0;
   out_7634219856181846541[129] = 0;
   out_7634219856181846541[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7634219856181846541[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7634219856181846541[132] = 1;
   out_7634219856181846541[133] = 0;
   out_7634219856181846541[134] = 0;
   out_7634219856181846541[135] = 0;
   out_7634219856181846541[136] = 0;
   out_7634219856181846541[137] = 0;
   out_7634219856181846541[138] = 0;
   out_7634219856181846541[139] = 0;
   out_7634219856181846541[140] = 0;
   out_7634219856181846541[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7634219856181846541[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7634219856181846541[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7634219856181846541[144] = 0;
   out_7634219856181846541[145] = 0;
   out_7634219856181846541[146] = 0;
   out_7634219856181846541[147] = 0;
   out_7634219856181846541[148] = 0;
   out_7634219856181846541[149] = 0;
   out_7634219856181846541[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7634219856181846541[151] = 0;
   out_7634219856181846541[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7634219856181846541[153] = 0;
   out_7634219856181846541[154] = 1;
   out_7634219856181846541[155] = 0;
   out_7634219856181846541[156] = 0;
   out_7634219856181846541[157] = 0;
   out_7634219856181846541[158] = 0;
   out_7634219856181846541[159] = 0;
   out_7634219856181846541[160] = 0;
   out_7634219856181846541[161] = 0;
   out_7634219856181846541[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7634219856181846541[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7634219856181846541[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7634219856181846541[165] = 0;
   out_7634219856181846541[166] = 0;
   out_7634219856181846541[167] = 0;
   out_7634219856181846541[168] = 0;
   out_7634219856181846541[169] = 0;
   out_7634219856181846541[170] = 0;
   out_7634219856181846541[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7634219856181846541[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7634219856181846541[173] = 0;
   out_7634219856181846541[174] = 0;
   out_7634219856181846541[175] = 0;
   out_7634219856181846541[176] = 1;
   out_7634219856181846541[177] = 0;
   out_7634219856181846541[178] = 0;
   out_7634219856181846541[179] = 0;
   out_7634219856181846541[180] = 0;
   out_7634219856181846541[181] = 0;
   out_7634219856181846541[182] = 0;
   out_7634219856181846541[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7634219856181846541[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7634219856181846541[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7634219856181846541[186] = 0;
   out_7634219856181846541[187] = 0;
   out_7634219856181846541[188] = 0;
   out_7634219856181846541[189] = 0;
   out_7634219856181846541[190] = 0;
   out_7634219856181846541[191] = 0;
   out_7634219856181846541[192] = 0;
   out_7634219856181846541[193] = 0;
   out_7634219856181846541[194] = 0;
   out_7634219856181846541[195] = 0;
   out_7634219856181846541[196] = 0;
   out_7634219856181846541[197] = 0;
   out_7634219856181846541[198] = 1;
   out_7634219856181846541[199] = 0;
   out_7634219856181846541[200] = 0;
   out_7634219856181846541[201] = 0;
   out_7634219856181846541[202] = 0;
   out_7634219856181846541[203] = 0;
   out_7634219856181846541[204] = 0;
   out_7634219856181846541[205] = 0;
   out_7634219856181846541[206] = 0;
   out_7634219856181846541[207] = 0;
   out_7634219856181846541[208] = 0;
   out_7634219856181846541[209] = 0;
   out_7634219856181846541[210] = 0;
   out_7634219856181846541[211] = 0;
   out_7634219856181846541[212] = 0;
   out_7634219856181846541[213] = 0;
   out_7634219856181846541[214] = 0;
   out_7634219856181846541[215] = 0;
   out_7634219856181846541[216] = 0;
   out_7634219856181846541[217] = 0;
   out_7634219856181846541[218] = 0;
   out_7634219856181846541[219] = 0;
   out_7634219856181846541[220] = 1;
   out_7634219856181846541[221] = 0;
   out_7634219856181846541[222] = 0;
   out_7634219856181846541[223] = 0;
   out_7634219856181846541[224] = 0;
   out_7634219856181846541[225] = 0;
   out_7634219856181846541[226] = 0;
   out_7634219856181846541[227] = 0;
   out_7634219856181846541[228] = 0;
   out_7634219856181846541[229] = 0;
   out_7634219856181846541[230] = 0;
   out_7634219856181846541[231] = 0;
   out_7634219856181846541[232] = 0;
   out_7634219856181846541[233] = 0;
   out_7634219856181846541[234] = 0;
   out_7634219856181846541[235] = 0;
   out_7634219856181846541[236] = 0;
   out_7634219856181846541[237] = 0;
   out_7634219856181846541[238] = 0;
   out_7634219856181846541[239] = 0;
   out_7634219856181846541[240] = 0;
   out_7634219856181846541[241] = 0;
   out_7634219856181846541[242] = 1;
   out_7634219856181846541[243] = 0;
   out_7634219856181846541[244] = 0;
   out_7634219856181846541[245] = 0;
   out_7634219856181846541[246] = 0;
   out_7634219856181846541[247] = 0;
   out_7634219856181846541[248] = 0;
   out_7634219856181846541[249] = 0;
   out_7634219856181846541[250] = 0;
   out_7634219856181846541[251] = 0;
   out_7634219856181846541[252] = 0;
   out_7634219856181846541[253] = 0;
   out_7634219856181846541[254] = 0;
   out_7634219856181846541[255] = 0;
   out_7634219856181846541[256] = 0;
   out_7634219856181846541[257] = 0;
   out_7634219856181846541[258] = 0;
   out_7634219856181846541[259] = 0;
   out_7634219856181846541[260] = 0;
   out_7634219856181846541[261] = 0;
   out_7634219856181846541[262] = 0;
   out_7634219856181846541[263] = 0;
   out_7634219856181846541[264] = 1;
   out_7634219856181846541[265] = 0;
   out_7634219856181846541[266] = 0;
   out_7634219856181846541[267] = 0;
   out_7634219856181846541[268] = 0;
   out_7634219856181846541[269] = 0;
   out_7634219856181846541[270] = 0;
   out_7634219856181846541[271] = 0;
   out_7634219856181846541[272] = 0;
   out_7634219856181846541[273] = 0;
   out_7634219856181846541[274] = 0;
   out_7634219856181846541[275] = 0;
   out_7634219856181846541[276] = 0;
   out_7634219856181846541[277] = 0;
   out_7634219856181846541[278] = 0;
   out_7634219856181846541[279] = 0;
   out_7634219856181846541[280] = 0;
   out_7634219856181846541[281] = 0;
   out_7634219856181846541[282] = 0;
   out_7634219856181846541[283] = 0;
   out_7634219856181846541[284] = 0;
   out_7634219856181846541[285] = 0;
   out_7634219856181846541[286] = 1;
   out_7634219856181846541[287] = 0;
   out_7634219856181846541[288] = 0;
   out_7634219856181846541[289] = 0;
   out_7634219856181846541[290] = 0;
   out_7634219856181846541[291] = 0;
   out_7634219856181846541[292] = 0;
   out_7634219856181846541[293] = 0;
   out_7634219856181846541[294] = 0;
   out_7634219856181846541[295] = 0;
   out_7634219856181846541[296] = 0;
   out_7634219856181846541[297] = 0;
   out_7634219856181846541[298] = 0;
   out_7634219856181846541[299] = 0;
   out_7634219856181846541[300] = 0;
   out_7634219856181846541[301] = 0;
   out_7634219856181846541[302] = 0;
   out_7634219856181846541[303] = 0;
   out_7634219856181846541[304] = 0;
   out_7634219856181846541[305] = 0;
   out_7634219856181846541[306] = 0;
   out_7634219856181846541[307] = 0;
   out_7634219856181846541[308] = 1;
   out_7634219856181846541[309] = 0;
   out_7634219856181846541[310] = 0;
   out_7634219856181846541[311] = 0;
   out_7634219856181846541[312] = 0;
   out_7634219856181846541[313] = 0;
   out_7634219856181846541[314] = 0;
   out_7634219856181846541[315] = 0;
   out_7634219856181846541[316] = 0;
   out_7634219856181846541[317] = 0;
   out_7634219856181846541[318] = 0;
   out_7634219856181846541[319] = 0;
   out_7634219856181846541[320] = 0;
   out_7634219856181846541[321] = 0;
   out_7634219856181846541[322] = 0;
   out_7634219856181846541[323] = 0;
   out_7634219856181846541[324] = 0;
   out_7634219856181846541[325] = 0;
   out_7634219856181846541[326] = 0;
   out_7634219856181846541[327] = 0;
   out_7634219856181846541[328] = 0;
   out_7634219856181846541[329] = 0;
   out_7634219856181846541[330] = 1;
   out_7634219856181846541[331] = 0;
   out_7634219856181846541[332] = 0;
   out_7634219856181846541[333] = 0;
   out_7634219856181846541[334] = 0;
   out_7634219856181846541[335] = 0;
   out_7634219856181846541[336] = 0;
   out_7634219856181846541[337] = 0;
   out_7634219856181846541[338] = 0;
   out_7634219856181846541[339] = 0;
   out_7634219856181846541[340] = 0;
   out_7634219856181846541[341] = 0;
   out_7634219856181846541[342] = 0;
   out_7634219856181846541[343] = 0;
   out_7634219856181846541[344] = 0;
   out_7634219856181846541[345] = 0;
   out_7634219856181846541[346] = 0;
   out_7634219856181846541[347] = 0;
   out_7634219856181846541[348] = 0;
   out_7634219856181846541[349] = 0;
   out_7634219856181846541[350] = 0;
   out_7634219856181846541[351] = 0;
   out_7634219856181846541[352] = 1;
   out_7634219856181846541[353] = 0;
   out_7634219856181846541[354] = 0;
   out_7634219856181846541[355] = 0;
   out_7634219856181846541[356] = 0;
   out_7634219856181846541[357] = 0;
   out_7634219856181846541[358] = 0;
   out_7634219856181846541[359] = 0;
   out_7634219856181846541[360] = 0;
   out_7634219856181846541[361] = 0;
   out_7634219856181846541[362] = 0;
   out_7634219856181846541[363] = 0;
   out_7634219856181846541[364] = 0;
   out_7634219856181846541[365] = 0;
   out_7634219856181846541[366] = 0;
   out_7634219856181846541[367] = 0;
   out_7634219856181846541[368] = 0;
   out_7634219856181846541[369] = 0;
   out_7634219856181846541[370] = 0;
   out_7634219856181846541[371] = 0;
   out_7634219856181846541[372] = 0;
   out_7634219856181846541[373] = 0;
   out_7634219856181846541[374] = 1;
   out_7634219856181846541[375] = 0;
   out_7634219856181846541[376] = 0;
   out_7634219856181846541[377] = 0;
   out_7634219856181846541[378] = 0;
   out_7634219856181846541[379] = 0;
   out_7634219856181846541[380] = 0;
   out_7634219856181846541[381] = 0;
   out_7634219856181846541[382] = 0;
   out_7634219856181846541[383] = 0;
   out_7634219856181846541[384] = 0;
   out_7634219856181846541[385] = 0;
   out_7634219856181846541[386] = 0;
   out_7634219856181846541[387] = 0;
   out_7634219856181846541[388] = 0;
   out_7634219856181846541[389] = 0;
   out_7634219856181846541[390] = 0;
   out_7634219856181846541[391] = 0;
   out_7634219856181846541[392] = 0;
   out_7634219856181846541[393] = 0;
   out_7634219856181846541[394] = 0;
   out_7634219856181846541[395] = 0;
   out_7634219856181846541[396] = 1;
   out_7634219856181846541[397] = 0;
   out_7634219856181846541[398] = 0;
   out_7634219856181846541[399] = 0;
   out_7634219856181846541[400] = 0;
   out_7634219856181846541[401] = 0;
   out_7634219856181846541[402] = 0;
   out_7634219856181846541[403] = 0;
   out_7634219856181846541[404] = 0;
   out_7634219856181846541[405] = 0;
   out_7634219856181846541[406] = 0;
   out_7634219856181846541[407] = 0;
   out_7634219856181846541[408] = 0;
   out_7634219856181846541[409] = 0;
   out_7634219856181846541[410] = 0;
   out_7634219856181846541[411] = 0;
   out_7634219856181846541[412] = 0;
   out_7634219856181846541[413] = 0;
   out_7634219856181846541[414] = 0;
   out_7634219856181846541[415] = 0;
   out_7634219856181846541[416] = 0;
   out_7634219856181846541[417] = 0;
   out_7634219856181846541[418] = 1;
   out_7634219856181846541[419] = 0;
   out_7634219856181846541[420] = 0;
   out_7634219856181846541[421] = 0;
   out_7634219856181846541[422] = 0;
   out_7634219856181846541[423] = 0;
   out_7634219856181846541[424] = 0;
   out_7634219856181846541[425] = 0;
   out_7634219856181846541[426] = 0;
   out_7634219856181846541[427] = 0;
   out_7634219856181846541[428] = 0;
   out_7634219856181846541[429] = 0;
   out_7634219856181846541[430] = 0;
   out_7634219856181846541[431] = 0;
   out_7634219856181846541[432] = 0;
   out_7634219856181846541[433] = 0;
   out_7634219856181846541[434] = 0;
   out_7634219856181846541[435] = 0;
   out_7634219856181846541[436] = 0;
   out_7634219856181846541[437] = 0;
   out_7634219856181846541[438] = 0;
   out_7634219856181846541[439] = 0;
   out_7634219856181846541[440] = 1;
}
void h_4(double *state, double *unused, double *out_6175535945132992619) {
   out_6175535945132992619[0] = state[10] + state[13];
   out_6175535945132992619[1] = state[11] + state[14];
   out_6175535945132992619[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5466614738994487577) {
   out_5466614738994487577[0] = 0;
   out_5466614738994487577[1] = 0;
   out_5466614738994487577[2] = 0;
   out_5466614738994487577[3] = 0;
   out_5466614738994487577[4] = 0;
   out_5466614738994487577[5] = 0;
   out_5466614738994487577[6] = 0;
   out_5466614738994487577[7] = 0;
   out_5466614738994487577[8] = 0;
   out_5466614738994487577[9] = 0;
   out_5466614738994487577[10] = 1;
   out_5466614738994487577[11] = 0;
   out_5466614738994487577[12] = 0;
   out_5466614738994487577[13] = 1;
   out_5466614738994487577[14] = 0;
   out_5466614738994487577[15] = 0;
   out_5466614738994487577[16] = 0;
   out_5466614738994487577[17] = 0;
   out_5466614738994487577[18] = 0;
   out_5466614738994487577[19] = 0;
   out_5466614738994487577[20] = 0;
   out_5466614738994487577[21] = 0;
   out_5466614738994487577[22] = 0;
   out_5466614738994487577[23] = 0;
   out_5466614738994487577[24] = 0;
   out_5466614738994487577[25] = 0;
   out_5466614738994487577[26] = 0;
   out_5466614738994487577[27] = 0;
   out_5466614738994487577[28] = 0;
   out_5466614738994487577[29] = 0;
   out_5466614738994487577[30] = 0;
   out_5466614738994487577[31] = 0;
   out_5466614738994487577[32] = 0;
   out_5466614738994487577[33] = 1;
   out_5466614738994487577[34] = 0;
   out_5466614738994487577[35] = 0;
   out_5466614738994487577[36] = 1;
   out_5466614738994487577[37] = 0;
   out_5466614738994487577[38] = 0;
   out_5466614738994487577[39] = 0;
   out_5466614738994487577[40] = 0;
   out_5466614738994487577[41] = 0;
   out_5466614738994487577[42] = 0;
   out_5466614738994487577[43] = 0;
   out_5466614738994487577[44] = 0;
   out_5466614738994487577[45] = 0;
   out_5466614738994487577[46] = 0;
   out_5466614738994487577[47] = 0;
   out_5466614738994487577[48] = 0;
   out_5466614738994487577[49] = 0;
   out_5466614738994487577[50] = 0;
   out_5466614738994487577[51] = 0;
   out_5466614738994487577[52] = 0;
   out_5466614738994487577[53] = 0;
   out_5466614738994487577[54] = 0;
   out_5466614738994487577[55] = 0;
   out_5466614738994487577[56] = 1;
   out_5466614738994487577[57] = 0;
   out_5466614738994487577[58] = 0;
   out_5466614738994487577[59] = 1;
   out_5466614738994487577[60] = 0;
   out_5466614738994487577[61] = 0;
   out_5466614738994487577[62] = 0;
   out_5466614738994487577[63] = 0;
   out_5466614738994487577[64] = 0;
   out_5466614738994487577[65] = 0;
}
void h_9(double *state, double *unused, double *out_7708084397290276278) {
   out_7708084397290276278[0] = state[10];
   out_7708084397290276278[1] = state[11];
   out_7708084397290276278[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5707804385624078222) {
   out_5707804385624078222[0] = 0;
   out_5707804385624078222[1] = 0;
   out_5707804385624078222[2] = 0;
   out_5707804385624078222[3] = 0;
   out_5707804385624078222[4] = 0;
   out_5707804385624078222[5] = 0;
   out_5707804385624078222[6] = 0;
   out_5707804385624078222[7] = 0;
   out_5707804385624078222[8] = 0;
   out_5707804385624078222[9] = 0;
   out_5707804385624078222[10] = 1;
   out_5707804385624078222[11] = 0;
   out_5707804385624078222[12] = 0;
   out_5707804385624078222[13] = 0;
   out_5707804385624078222[14] = 0;
   out_5707804385624078222[15] = 0;
   out_5707804385624078222[16] = 0;
   out_5707804385624078222[17] = 0;
   out_5707804385624078222[18] = 0;
   out_5707804385624078222[19] = 0;
   out_5707804385624078222[20] = 0;
   out_5707804385624078222[21] = 0;
   out_5707804385624078222[22] = 0;
   out_5707804385624078222[23] = 0;
   out_5707804385624078222[24] = 0;
   out_5707804385624078222[25] = 0;
   out_5707804385624078222[26] = 0;
   out_5707804385624078222[27] = 0;
   out_5707804385624078222[28] = 0;
   out_5707804385624078222[29] = 0;
   out_5707804385624078222[30] = 0;
   out_5707804385624078222[31] = 0;
   out_5707804385624078222[32] = 0;
   out_5707804385624078222[33] = 1;
   out_5707804385624078222[34] = 0;
   out_5707804385624078222[35] = 0;
   out_5707804385624078222[36] = 0;
   out_5707804385624078222[37] = 0;
   out_5707804385624078222[38] = 0;
   out_5707804385624078222[39] = 0;
   out_5707804385624078222[40] = 0;
   out_5707804385624078222[41] = 0;
   out_5707804385624078222[42] = 0;
   out_5707804385624078222[43] = 0;
   out_5707804385624078222[44] = 0;
   out_5707804385624078222[45] = 0;
   out_5707804385624078222[46] = 0;
   out_5707804385624078222[47] = 0;
   out_5707804385624078222[48] = 0;
   out_5707804385624078222[49] = 0;
   out_5707804385624078222[50] = 0;
   out_5707804385624078222[51] = 0;
   out_5707804385624078222[52] = 0;
   out_5707804385624078222[53] = 0;
   out_5707804385624078222[54] = 0;
   out_5707804385624078222[55] = 0;
   out_5707804385624078222[56] = 1;
   out_5707804385624078222[57] = 0;
   out_5707804385624078222[58] = 0;
   out_5707804385624078222[59] = 0;
   out_5707804385624078222[60] = 0;
   out_5707804385624078222[61] = 0;
   out_5707804385624078222[62] = 0;
   out_5707804385624078222[63] = 0;
   out_5707804385624078222[64] = 0;
   out_5707804385624078222[65] = 0;
}
void h_10(double *state, double *unused, double *out_5970349915769922415) {
   out_5970349915769922415[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5970349915769922415[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5970349915769922415[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1038736123818861462) {
   out_1038736123818861462[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1038736123818861462[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1038736123818861462[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1038736123818861462[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1038736123818861462[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1038736123818861462[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1038736123818861462[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1038736123818861462[7] = 0;
   out_1038736123818861462[8] = 0;
   out_1038736123818861462[9] = 0;
   out_1038736123818861462[10] = 0;
   out_1038736123818861462[11] = 0;
   out_1038736123818861462[12] = 0;
   out_1038736123818861462[13] = 0;
   out_1038736123818861462[14] = 0;
   out_1038736123818861462[15] = 0;
   out_1038736123818861462[16] = 1;
   out_1038736123818861462[17] = 0;
   out_1038736123818861462[18] = 0;
   out_1038736123818861462[19] = 1;
   out_1038736123818861462[20] = 0;
   out_1038736123818861462[21] = 0;
   out_1038736123818861462[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1038736123818861462[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1038736123818861462[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1038736123818861462[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1038736123818861462[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1038736123818861462[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1038736123818861462[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1038736123818861462[29] = 0;
   out_1038736123818861462[30] = 0;
   out_1038736123818861462[31] = 0;
   out_1038736123818861462[32] = 0;
   out_1038736123818861462[33] = 0;
   out_1038736123818861462[34] = 0;
   out_1038736123818861462[35] = 0;
   out_1038736123818861462[36] = 0;
   out_1038736123818861462[37] = 0;
   out_1038736123818861462[38] = 0;
   out_1038736123818861462[39] = 1;
   out_1038736123818861462[40] = 0;
   out_1038736123818861462[41] = 0;
   out_1038736123818861462[42] = 1;
   out_1038736123818861462[43] = 0;
   out_1038736123818861462[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1038736123818861462[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1038736123818861462[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1038736123818861462[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1038736123818861462[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1038736123818861462[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1038736123818861462[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1038736123818861462[51] = 0;
   out_1038736123818861462[52] = 0;
   out_1038736123818861462[53] = 0;
   out_1038736123818861462[54] = 0;
   out_1038736123818861462[55] = 0;
   out_1038736123818861462[56] = 0;
   out_1038736123818861462[57] = 0;
   out_1038736123818861462[58] = 0;
   out_1038736123818861462[59] = 0;
   out_1038736123818861462[60] = 0;
   out_1038736123818861462[61] = 0;
   out_1038736123818861462[62] = 1;
   out_1038736123818861462[63] = 0;
   out_1038736123818861462[64] = 0;
   out_1038736123818861462[65] = 1;
}
void h_12(double *state, double *unused, double *out_8325619333716319982) {
   out_8325619333716319982[0] = state[0];
   out_8325619333716319982[1] = state[1];
   out_8325619333716319982[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7960672926683102244) {
   out_7960672926683102244[0] = 1;
   out_7960672926683102244[1] = 0;
   out_7960672926683102244[2] = 0;
   out_7960672926683102244[3] = 0;
   out_7960672926683102244[4] = 0;
   out_7960672926683102244[5] = 0;
   out_7960672926683102244[6] = 0;
   out_7960672926683102244[7] = 0;
   out_7960672926683102244[8] = 0;
   out_7960672926683102244[9] = 0;
   out_7960672926683102244[10] = 0;
   out_7960672926683102244[11] = 0;
   out_7960672926683102244[12] = 0;
   out_7960672926683102244[13] = 0;
   out_7960672926683102244[14] = 0;
   out_7960672926683102244[15] = 0;
   out_7960672926683102244[16] = 0;
   out_7960672926683102244[17] = 0;
   out_7960672926683102244[18] = 0;
   out_7960672926683102244[19] = 0;
   out_7960672926683102244[20] = 0;
   out_7960672926683102244[21] = 0;
   out_7960672926683102244[22] = 0;
   out_7960672926683102244[23] = 1;
   out_7960672926683102244[24] = 0;
   out_7960672926683102244[25] = 0;
   out_7960672926683102244[26] = 0;
   out_7960672926683102244[27] = 0;
   out_7960672926683102244[28] = 0;
   out_7960672926683102244[29] = 0;
   out_7960672926683102244[30] = 0;
   out_7960672926683102244[31] = 0;
   out_7960672926683102244[32] = 0;
   out_7960672926683102244[33] = 0;
   out_7960672926683102244[34] = 0;
   out_7960672926683102244[35] = 0;
   out_7960672926683102244[36] = 0;
   out_7960672926683102244[37] = 0;
   out_7960672926683102244[38] = 0;
   out_7960672926683102244[39] = 0;
   out_7960672926683102244[40] = 0;
   out_7960672926683102244[41] = 0;
   out_7960672926683102244[42] = 0;
   out_7960672926683102244[43] = 0;
   out_7960672926683102244[44] = 0;
   out_7960672926683102244[45] = 0;
   out_7960672926683102244[46] = 1;
   out_7960672926683102244[47] = 0;
   out_7960672926683102244[48] = 0;
   out_7960672926683102244[49] = 0;
   out_7960672926683102244[50] = 0;
   out_7960672926683102244[51] = 0;
   out_7960672926683102244[52] = 0;
   out_7960672926683102244[53] = 0;
   out_7960672926683102244[54] = 0;
   out_7960672926683102244[55] = 0;
   out_7960672926683102244[56] = 0;
   out_7960672926683102244[57] = 0;
   out_7960672926683102244[58] = 0;
   out_7960672926683102244[59] = 0;
   out_7960672926683102244[60] = 0;
   out_7960672926683102244[61] = 0;
   out_7960672926683102244[62] = 0;
   out_7960672926683102244[63] = 0;
   out_7960672926683102244[64] = 0;
   out_7960672926683102244[65] = 0;
}
void h_35(double *state, double *unused, double *out_6228897039356605775) {
   out_6228897039356605775[0] = state[7];
   out_6228897039356605775[1] = state[8];
   out_6228897039356605775[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8833276796367094953) {
   out_8833276796367094953[0] = 0;
   out_8833276796367094953[1] = 0;
   out_8833276796367094953[2] = 0;
   out_8833276796367094953[3] = 0;
   out_8833276796367094953[4] = 0;
   out_8833276796367094953[5] = 0;
   out_8833276796367094953[6] = 0;
   out_8833276796367094953[7] = 1;
   out_8833276796367094953[8] = 0;
   out_8833276796367094953[9] = 0;
   out_8833276796367094953[10] = 0;
   out_8833276796367094953[11] = 0;
   out_8833276796367094953[12] = 0;
   out_8833276796367094953[13] = 0;
   out_8833276796367094953[14] = 0;
   out_8833276796367094953[15] = 0;
   out_8833276796367094953[16] = 0;
   out_8833276796367094953[17] = 0;
   out_8833276796367094953[18] = 0;
   out_8833276796367094953[19] = 0;
   out_8833276796367094953[20] = 0;
   out_8833276796367094953[21] = 0;
   out_8833276796367094953[22] = 0;
   out_8833276796367094953[23] = 0;
   out_8833276796367094953[24] = 0;
   out_8833276796367094953[25] = 0;
   out_8833276796367094953[26] = 0;
   out_8833276796367094953[27] = 0;
   out_8833276796367094953[28] = 0;
   out_8833276796367094953[29] = 0;
   out_8833276796367094953[30] = 1;
   out_8833276796367094953[31] = 0;
   out_8833276796367094953[32] = 0;
   out_8833276796367094953[33] = 0;
   out_8833276796367094953[34] = 0;
   out_8833276796367094953[35] = 0;
   out_8833276796367094953[36] = 0;
   out_8833276796367094953[37] = 0;
   out_8833276796367094953[38] = 0;
   out_8833276796367094953[39] = 0;
   out_8833276796367094953[40] = 0;
   out_8833276796367094953[41] = 0;
   out_8833276796367094953[42] = 0;
   out_8833276796367094953[43] = 0;
   out_8833276796367094953[44] = 0;
   out_8833276796367094953[45] = 0;
   out_8833276796367094953[46] = 0;
   out_8833276796367094953[47] = 0;
   out_8833276796367094953[48] = 0;
   out_8833276796367094953[49] = 0;
   out_8833276796367094953[50] = 0;
   out_8833276796367094953[51] = 0;
   out_8833276796367094953[52] = 0;
   out_8833276796367094953[53] = 1;
   out_8833276796367094953[54] = 0;
   out_8833276796367094953[55] = 0;
   out_8833276796367094953[56] = 0;
   out_8833276796367094953[57] = 0;
   out_8833276796367094953[58] = 0;
   out_8833276796367094953[59] = 0;
   out_8833276796367094953[60] = 0;
   out_8833276796367094953[61] = 0;
   out_8833276796367094953[62] = 0;
   out_8833276796367094953[63] = 0;
   out_8833276796367094953[64] = 0;
   out_8833276796367094953[65] = 0;
}
void h_32(double *state, double *unused, double *out_535028966847562763) {
   out_535028966847562763[0] = state[3];
   out_535028966847562763[1] = state[4];
   out_535028966847562763[2] = state[5];
   out_535028966847562763[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1918412292672978597) {
   out_1918412292672978597[0] = 0;
   out_1918412292672978597[1] = 0;
   out_1918412292672978597[2] = 0;
   out_1918412292672978597[3] = 1;
   out_1918412292672978597[4] = 0;
   out_1918412292672978597[5] = 0;
   out_1918412292672978597[6] = 0;
   out_1918412292672978597[7] = 0;
   out_1918412292672978597[8] = 0;
   out_1918412292672978597[9] = 0;
   out_1918412292672978597[10] = 0;
   out_1918412292672978597[11] = 0;
   out_1918412292672978597[12] = 0;
   out_1918412292672978597[13] = 0;
   out_1918412292672978597[14] = 0;
   out_1918412292672978597[15] = 0;
   out_1918412292672978597[16] = 0;
   out_1918412292672978597[17] = 0;
   out_1918412292672978597[18] = 0;
   out_1918412292672978597[19] = 0;
   out_1918412292672978597[20] = 0;
   out_1918412292672978597[21] = 0;
   out_1918412292672978597[22] = 0;
   out_1918412292672978597[23] = 0;
   out_1918412292672978597[24] = 0;
   out_1918412292672978597[25] = 0;
   out_1918412292672978597[26] = 1;
   out_1918412292672978597[27] = 0;
   out_1918412292672978597[28] = 0;
   out_1918412292672978597[29] = 0;
   out_1918412292672978597[30] = 0;
   out_1918412292672978597[31] = 0;
   out_1918412292672978597[32] = 0;
   out_1918412292672978597[33] = 0;
   out_1918412292672978597[34] = 0;
   out_1918412292672978597[35] = 0;
   out_1918412292672978597[36] = 0;
   out_1918412292672978597[37] = 0;
   out_1918412292672978597[38] = 0;
   out_1918412292672978597[39] = 0;
   out_1918412292672978597[40] = 0;
   out_1918412292672978597[41] = 0;
   out_1918412292672978597[42] = 0;
   out_1918412292672978597[43] = 0;
   out_1918412292672978597[44] = 0;
   out_1918412292672978597[45] = 0;
   out_1918412292672978597[46] = 0;
   out_1918412292672978597[47] = 0;
   out_1918412292672978597[48] = 0;
   out_1918412292672978597[49] = 1;
   out_1918412292672978597[50] = 0;
   out_1918412292672978597[51] = 0;
   out_1918412292672978597[52] = 0;
   out_1918412292672978597[53] = 0;
   out_1918412292672978597[54] = 0;
   out_1918412292672978597[55] = 0;
   out_1918412292672978597[56] = 0;
   out_1918412292672978597[57] = 0;
   out_1918412292672978597[58] = 0;
   out_1918412292672978597[59] = 0;
   out_1918412292672978597[60] = 0;
   out_1918412292672978597[61] = 0;
   out_1918412292672978597[62] = 0;
   out_1918412292672978597[63] = 0;
   out_1918412292672978597[64] = 0;
   out_1918412292672978597[65] = 0;
   out_1918412292672978597[66] = 0;
   out_1918412292672978597[67] = 0;
   out_1918412292672978597[68] = 0;
   out_1918412292672978597[69] = 0;
   out_1918412292672978597[70] = 0;
   out_1918412292672978597[71] = 0;
   out_1918412292672978597[72] = 1;
   out_1918412292672978597[73] = 0;
   out_1918412292672978597[74] = 0;
   out_1918412292672978597[75] = 0;
   out_1918412292672978597[76] = 0;
   out_1918412292672978597[77] = 0;
   out_1918412292672978597[78] = 0;
   out_1918412292672978597[79] = 0;
   out_1918412292672978597[80] = 0;
   out_1918412292672978597[81] = 0;
   out_1918412292672978597[82] = 0;
   out_1918412292672978597[83] = 0;
   out_1918412292672978597[84] = 0;
   out_1918412292672978597[85] = 0;
   out_1918412292672978597[86] = 0;
   out_1918412292672978597[87] = 0;
}
void h_13(double *state, double *unused, double *out_308609886787442161) {
   out_308609886787442161[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_308609886787442161[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_308609886787442161[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_889109028162732878) {
   out_889109028162732878[0] = 0;
   out_889109028162732878[1] = 0;
   out_889109028162732878[2] = 0;
   out_889109028162732878[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_889109028162732878[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_889109028162732878[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_889109028162732878[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_889109028162732878[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_889109028162732878[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_889109028162732878[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_889109028162732878[10] = 0;
   out_889109028162732878[11] = 0;
   out_889109028162732878[12] = 0;
   out_889109028162732878[13] = 0;
   out_889109028162732878[14] = 0;
   out_889109028162732878[15] = 0;
   out_889109028162732878[16] = 0;
   out_889109028162732878[17] = 0;
   out_889109028162732878[18] = 0;
   out_889109028162732878[19] = 0;
   out_889109028162732878[20] = 0;
   out_889109028162732878[21] = 0;
   out_889109028162732878[22] = 0;
   out_889109028162732878[23] = 0;
   out_889109028162732878[24] = 0;
   out_889109028162732878[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_889109028162732878[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_889109028162732878[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_889109028162732878[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_889109028162732878[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_889109028162732878[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_889109028162732878[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_889109028162732878[32] = 0;
   out_889109028162732878[33] = 0;
   out_889109028162732878[34] = 0;
   out_889109028162732878[35] = 0;
   out_889109028162732878[36] = 0;
   out_889109028162732878[37] = 0;
   out_889109028162732878[38] = 0;
   out_889109028162732878[39] = 0;
   out_889109028162732878[40] = 0;
   out_889109028162732878[41] = 0;
   out_889109028162732878[42] = 0;
   out_889109028162732878[43] = 0;
   out_889109028162732878[44] = 0;
   out_889109028162732878[45] = 0;
   out_889109028162732878[46] = 0;
   out_889109028162732878[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_889109028162732878[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_889109028162732878[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_889109028162732878[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_889109028162732878[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_889109028162732878[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_889109028162732878[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_889109028162732878[54] = 0;
   out_889109028162732878[55] = 0;
   out_889109028162732878[56] = 0;
   out_889109028162732878[57] = 0;
   out_889109028162732878[58] = 0;
   out_889109028162732878[59] = 0;
   out_889109028162732878[60] = 0;
   out_889109028162732878[61] = 0;
   out_889109028162732878[62] = 0;
   out_889109028162732878[63] = 0;
   out_889109028162732878[64] = 0;
   out_889109028162732878[65] = 0;
}
void h_14(double *state, double *unused, double *out_7708084397290276278) {
   out_7708084397290276278[0] = state[10];
   out_7708084397290276278[1] = state[11];
   out_7708084397290276278[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5707804385624078222) {
   out_5707804385624078222[0] = 0;
   out_5707804385624078222[1] = 0;
   out_5707804385624078222[2] = 0;
   out_5707804385624078222[3] = 0;
   out_5707804385624078222[4] = 0;
   out_5707804385624078222[5] = 0;
   out_5707804385624078222[6] = 0;
   out_5707804385624078222[7] = 0;
   out_5707804385624078222[8] = 0;
   out_5707804385624078222[9] = 0;
   out_5707804385624078222[10] = 1;
   out_5707804385624078222[11] = 0;
   out_5707804385624078222[12] = 0;
   out_5707804385624078222[13] = 0;
   out_5707804385624078222[14] = 0;
   out_5707804385624078222[15] = 0;
   out_5707804385624078222[16] = 0;
   out_5707804385624078222[17] = 0;
   out_5707804385624078222[18] = 0;
   out_5707804385624078222[19] = 0;
   out_5707804385624078222[20] = 0;
   out_5707804385624078222[21] = 0;
   out_5707804385624078222[22] = 0;
   out_5707804385624078222[23] = 0;
   out_5707804385624078222[24] = 0;
   out_5707804385624078222[25] = 0;
   out_5707804385624078222[26] = 0;
   out_5707804385624078222[27] = 0;
   out_5707804385624078222[28] = 0;
   out_5707804385624078222[29] = 0;
   out_5707804385624078222[30] = 0;
   out_5707804385624078222[31] = 0;
   out_5707804385624078222[32] = 0;
   out_5707804385624078222[33] = 1;
   out_5707804385624078222[34] = 0;
   out_5707804385624078222[35] = 0;
   out_5707804385624078222[36] = 0;
   out_5707804385624078222[37] = 0;
   out_5707804385624078222[38] = 0;
   out_5707804385624078222[39] = 0;
   out_5707804385624078222[40] = 0;
   out_5707804385624078222[41] = 0;
   out_5707804385624078222[42] = 0;
   out_5707804385624078222[43] = 0;
   out_5707804385624078222[44] = 0;
   out_5707804385624078222[45] = 0;
   out_5707804385624078222[46] = 0;
   out_5707804385624078222[47] = 0;
   out_5707804385624078222[48] = 0;
   out_5707804385624078222[49] = 0;
   out_5707804385624078222[50] = 0;
   out_5707804385624078222[51] = 0;
   out_5707804385624078222[52] = 0;
   out_5707804385624078222[53] = 0;
   out_5707804385624078222[54] = 0;
   out_5707804385624078222[55] = 0;
   out_5707804385624078222[56] = 1;
   out_5707804385624078222[57] = 0;
   out_5707804385624078222[58] = 0;
   out_5707804385624078222[59] = 0;
   out_5707804385624078222[60] = 0;
   out_5707804385624078222[61] = 0;
   out_5707804385624078222[62] = 0;
   out_5707804385624078222[63] = 0;
   out_5707804385624078222[64] = 0;
   out_5707804385624078222[65] = 0;
}
void h_33(double *state, double *unused, double *out_7948037784891248791) {
   out_7948037784891248791[0] = state[16];
   out_7948037784891248791[1] = state[17];
   out_7948037784891248791[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6462910272703599059) {
   out_6462910272703599059[0] = 0;
   out_6462910272703599059[1] = 0;
   out_6462910272703599059[2] = 0;
   out_6462910272703599059[3] = 0;
   out_6462910272703599059[4] = 0;
   out_6462910272703599059[5] = 0;
   out_6462910272703599059[6] = 0;
   out_6462910272703599059[7] = 0;
   out_6462910272703599059[8] = 0;
   out_6462910272703599059[9] = 0;
   out_6462910272703599059[10] = 0;
   out_6462910272703599059[11] = 0;
   out_6462910272703599059[12] = 0;
   out_6462910272703599059[13] = 0;
   out_6462910272703599059[14] = 0;
   out_6462910272703599059[15] = 0;
   out_6462910272703599059[16] = 1;
   out_6462910272703599059[17] = 0;
   out_6462910272703599059[18] = 0;
   out_6462910272703599059[19] = 0;
   out_6462910272703599059[20] = 0;
   out_6462910272703599059[21] = 0;
   out_6462910272703599059[22] = 0;
   out_6462910272703599059[23] = 0;
   out_6462910272703599059[24] = 0;
   out_6462910272703599059[25] = 0;
   out_6462910272703599059[26] = 0;
   out_6462910272703599059[27] = 0;
   out_6462910272703599059[28] = 0;
   out_6462910272703599059[29] = 0;
   out_6462910272703599059[30] = 0;
   out_6462910272703599059[31] = 0;
   out_6462910272703599059[32] = 0;
   out_6462910272703599059[33] = 0;
   out_6462910272703599059[34] = 0;
   out_6462910272703599059[35] = 0;
   out_6462910272703599059[36] = 0;
   out_6462910272703599059[37] = 0;
   out_6462910272703599059[38] = 0;
   out_6462910272703599059[39] = 1;
   out_6462910272703599059[40] = 0;
   out_6462910272703599059[41] = 0;
   out_6462910272703599059[42] = 0;
   out_6462910272703599059[43] = 0;
   out_6462910272703599059[44] = 0;
   out_6462910272703599059[45] = 0;
   out_6462910272703599059[46] = 0;
   out_6462910272703599059[47] = 0;
   out_6462910272703599059[48] = 0;
   out_6462910272703599059[49] = 0;
   out_6462910272703599059[50] = 0;
   out_6462910272703599059[51] = 0;
   out_6462910272703599059[52] = 0;
   out_6462910272703599059[53] = 0;
   out_6462910272703599059[54] = 0;
   out_6462910272703599059[55] = 0;
   out_6462910272703599059[56] = 0;
   out_6462910272703599059[57] = 0;
   out_6462910272703599059[58] = 0;
   out_6462910272703599059[59] = 0;
   out_6462910272703599059[60] = 0;
   out_6462910272703599059[61] = 0;
   out_6462910272703599059[62] = 1;
   out_6462910272703599059[63] = 0;
   out_6462910272703599059[64] = 0;
   out_6462910272703599059[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2381728513021776623) {
  H(in_vec, out_2381728513021776623);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5908421990898430924) {
  err_fun(nom_x, delta_x, out_5908421990898430924);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5372329235597557523) {
  inv_err_fun(nom_x, true_x, out_5372329235597557523);
}
void live_H_mod_fun(double *state, double *out_1274189134229994757) {
  H_mod_fun(state, out_1274189134229994757);
}
void live_f_fun(double *state, double dt, double *out_5206476803248674863) {
  f_fun(state,  dt, out_5206476803248674863);
}
void live_F_fun(double *state, double dt, double *out_7634219856181846541) {
  F_fun(state,  dt, out_7634219856181846541);
}
void live_h_4(double *state, double *unused, double *out_6175535945132992619) {
  h_4(state, unused, out_6175535945132992619);
}
void live_H_4(double *state, double *unused, double *out_5466614738994487577) {
  H_4(state, unused, out_5466614738994487577);
}
void live_h_9(double *state, double *unused, double *out_7708084397290276278) {
  h_9(state, unused, out_7708084397290276278);
}
void live_H_9(double *state, double *unused, double *out_5707804385624078222) {
  H_9(state, unused, out_5707804385624078222);
}
void live_h_10(double *state, double *unused, double *out_5970349915769922415) {
  h_10(state, unused, out_5970349915769922415);
}
void live_H_10(double *state, double *unused, double *out_1038736123818861462) {
  H_10(state, unused, out_1038736123818861462);
}
void live_h_12(double *state, double *unused, double *out_8325619333716319982) {
  h_12(state, unused, out_8325619333716319982);
}
void live_H_12(double *state, double *unused, double *out_7960672926683102244) {
  H_12(state, unused, out_7960672926683102244);
}
void live_h_35(double *state, double *unused, double *out_6228897039356605775) {
  h_35(state, unused, out_6228897039356605775);
}
void live_H_35(double *state, double *unused, double *out_8833276796367094953) {
  H_35(state, unused, out_8833276796367094953);
}
void live_h_32(double *state, double *unused, double *out_535028966847562763) {
  h_32(state, unused, out_535028966847562763);
}
void live_H_32(double *state, double *unused, double *out_1918412292672978597) {
  H_32(state, unused, out_1918412292672978597);
}
void live_h_13(double *state, double *unused, double *out_308609886787442161) {
  h_13(state, unused, out_308609886787442161);
}
void live_H_13(double *state, double *unused, double *out_889109028162732878) {
  H_13(state, unused, out_889109028162732878);
}
void live_h_14(double *state, double *unused, double *out_7708084397290276278) {
  h_14(state, unused, out_7708084397290276278);
}
void live_H_14(double *state, double *unused, double *out_5707804385624078222) {
  H_14(state, unused, out_5707804385624078222);
}
void live_h_33(double *state, double *unused, double *out_7948037784891248791) {
  h_33(state, unused, out_7948037784891248791);
}
void live_H_33(double *state, double *unused, double *out_6462910272703599059) {
  H_33(state, unused, out_6462910272703599059);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
